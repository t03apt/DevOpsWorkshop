parameters:
  - name: steps
    type: stepList
    default:
    - script: echo step one
    - script: echo step two

  - name: skipUseDotNet
    type: boolean
    default: true

stages:
- stage: Build
  displayName: 'Build'
  jobs:
  
  - job: BeforeBuild
    displayName: Before Steps

    pool:
      vmImage: 'windows-latest'

    steps: ${{ parameters.steps }}

  - job: Build
    displayName: 'Build'
    dependsOn: BeforeBuild

    pool:
      vmImage: 'windows-latest'

    variables:
      dotnetSdkVersion: '7.x'
      buildPlatform: 'any cpu'
      buildConfiguration: 'Release'
      buildProjects: '**/WebApi.csproj'
      testProjects: '**/WebApi.Tests.csproj'

    steps:
    - task: UseDotNet@2
      displayName: 'use dotnet sdk $(dotnetSdkVersion)'
      enabled: ${{ not(parameters.skipUseDotNet) }}
      inputs:
        packageType: sdk
        version: '$(dotnetSdkVersion)'

    - task: NuGetToolInstaller@1
      displayName: 'nuget version setup'
      enabled: false
      inputs:
        versionSpec: '5.3.1'
        checkLatest: true

    - task: NuGetAuthenticate@1
      displayName: 'Force nuget authentication'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: restore
        projects: $(buildProjects)
        feedsToUse: 'config'
        nugetConfigPath: 'services/NuGet.config'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: build
        projects: $(buildProjects)
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet test'
      enabled: false
      inputs:
        command: test
        projects: $(testProjects)
        arguments: '--collect "Code coverage"'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish'
      inputs:
        command: publish
        publishWebProjects: false
        projects: $(buildProjects)
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    - publish: $(Build.ArtifactStagingDirectory)
      displayName: 'publish artifact'
      artifact: drop